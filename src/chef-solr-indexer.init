#!/bin/bash
#
# chef-solr-indexer Startup script for the Chef search indexer
#
# chkconfig: - 95 05
# description: Search indexer component of the Chef Server.

### BEGIN INIT INFO
# Provides: chef-solr-indexer
# Required-Start: $local_fs $network $remote_fs chef-solr rabbitmq-server
# Required-Stop: $local_fs $network $remote_fs chef-solr rabbitmq-server
# Should-Start: $named $time
# Should-Stop: $named $time
# Short-Description: Startup script for the Chef search indexer
# Description: Search indexer component of the Chef Server.
### END INIT INFO

# Source function library
. /etc/init.d/functions

exec="/usr/bin/chef-solr-indexer"
prog="chef-solr-indexer"

[ -f /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

config=${CONFIG-/etc/chef/solr-indexer.rb}
pidfile=${PIDFILE-/var/run/chef/solr-indexer.pid}
lockfile=${LOCKFILE-/var/lock/subsys/$prog}
logfile=${LOGFILE-/var/log/chef/solr-indexer}
instances=${INSTANCES-1}

options=${OPTIONS-}

start() {
    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6
    /usr/sbin/chef-create-amqp_passwd &> /dev/null
    for i in `seq $instances` ; do 
        start_proc "$prog-$i" $prog -d -c "$config" -L "$logfile-$i.log" -P "$pidfile-$i" "$options" 
    done
}
start_proc() {
    local base=$1
    shift

    echo -n $"Starting $base: "
    eval daemon $*
    RETVAL=$?
    [ $RETVAL = 0 ] && touch $lockfile

    echo
    return $RETVAL
}


stop() {
    for i in `seq $instances` ; do 
        echo -n $"Stopping $prog $i: "
        killproc -p "$pidfile-$i" $prog 
        retval=$?
        echo
    done
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart () {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status

    for i in `seq $instances` ; do 
        status -p $pidfile-$i $prog 
    done
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
